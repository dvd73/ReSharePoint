using System.Collections.Generic;

namespace ReSharePoint.Entities
{
    public static partial class TypeInfo
    {
        public static readonly HashSet<string> SPWFActivities = new HashSet<string>()
        {
            "System.Workflow.ComponentModel.Activity",
            "System.Workflow.Activities.CallExternalMethodActivity",
            "System.Workflow.Activities.CodeActivity",
            "System.Workflow.Activities.DelayActivity",
            "System.Workflow.Activities.HandleExternalEventActivity",
            "System.Workflow.Activities.InvokeWebServiceActivity",
            "System.Workflow.Activities.InvokeWorkflowActivity",
            "System.Workflow.Activities.PolicyActivity",
            "System.Workflow.Activities.SendActivity",
            "System.Workflow.Activities.SetStateActivity",
            "System.Workflow.Activities.WebServiceFaultActivity",
            "System.Workflow.Activities.WebServiceInputActivity",
            "System.Workflow.Activities.WebServiceOutputActivity",
            "System.Workflow.ComponentModel.CompensateActivity",
            "System.Workflow.ComponentModel.CompositeActivity",
            "System.Workflow.ComponentModel.SuspendActivity",
            "System.Workflow.ComponentModel.TerminateActivity",
            "System.Workflow.ComponentModel.ThrowActivity",
            "System.Workflow.Activities.ConditionedActivityGroup",
            "System.Workflow.Activities.EventHandlersActivity",
            "System.Workflow.Activities.EventHandlingScopeActivity",
            "System.Workflow.Activities.IfElseActivity",
            "System.Workflow.Activities.ListenActivity",
            "System.Workflow.Activities.ParallelActivity",
            "System.Workflow.Activities.ReplicatorActivity",
            "System.Workflow.Activities.SequenceActivity",
            "System.Workflow.Activities.StateActivity",
            "System.Workflow.Activities.WhileActivity",
            "System.Workflow.ComponentModel.CancellationHandlerActivity",
            "System.Workflow.ComponentModel.CompensatableTransactionScopeActivity",
            "System.Workflow.ComponentModel.CompensationHandlerActivity",
            "System.Workflow.ComponentModel.FaultHandlerActivity",
            "System.Workflow.ComponentModel.FaultHandlersActivity",
            "System.Workflow.ComponentModel.SynchronizationScopeActivity",
            "System.Workflow.ComponentModel.TransactionScopeActivity",
            "System.Workflow.Activities.CompensatableSequenceActivity",
            "System.Workflow.Activities.EventDrivenActivity",
            "System.Workflow.Activities.IfElseBranchActivity",
            "System.Workflow.Activities.ReceiveActivity",
            "System.Workflow.Activities.SequentialWorkflowActivity",
            "System.Workflow.Activities.StateFinalizationActivity",
            "System.Workflow.Activities.StateInitializationActivity",
            "System.Activities.Activity",
            "System.Activities.ActivityWithResult",
            "System.Activities.AsyncCodeActivity",
            "System.Activities.CodeActivity",
            "System.Activities.DynamicActivity",
            "System.Activities.NativeActivity",
            "System.ServiceModel.Activities.Receive",
            "System.ServiceModel.Activities.ReceiveReply",
            "System.ServiceModel.Activities.Send",
            "System.ServiceModel.Activities.SendReply",
            "System.Activities.Statements.InvokeMethod",
            "System.Activities.Statements.Assign",
            "System.Activities.Statements.Throw",
            "System.Activities.Statements.WriteLine",
            "System.Activities.Statements.CancellationScope",
            "System.Activities.Statements.Compensate",
            "System.Activities.Statements.Confirm",
            "System.Activities.Statements.Delay",
            "System.Activities.Statements.DeleteBookmarkScope",
            "System.Activities.Statements.DoWhile",
            "System.Activities.Statements.Flowchart",
            "System.Activities.Statements.If",
            "System.Activities.Statements.Interop",
            "System.Activities.Statements.InvokeAction",
            "System.Activities.Statements.InvokeDelegate",
            "System.Activities.Statements.NoPersistScope",
            "System.Activities.Statements.Parallel",
            "System.Activities.Statements.Persist",
            "System.Activities.Statements.Pick",
            "System.Activities.Statements.Rethrow",
            "System.Activities.Statements.Sequence",
            "System.Activities.Statements.StateMachine",
            "System.Activities.Statements.TerminateWorkflow",
            "System.Activities.Statements.TransactionScope",
            "System.Activities.Statements.TryCatch",
            "System.Activities.Statements.While",
            "System.Activities.Validation.AddValidationError",
            "System.Activities.Validation.AssertValidation",
            "System.Activities.Validation.Constraint",
            "System.ServiceModel.Activities.CorrelationScope",
            "System.ServiceModel.Activities.InitializeCorrelation",
            "System.ServiceModel.Activities.TransactedReceiveScope"
        };
    }
}
